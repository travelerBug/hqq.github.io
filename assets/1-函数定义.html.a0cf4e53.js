import{_ as n,o as s,c as a,e as t}from"./app.cef7465c.js";const p={},o=t(`<h1 id="_1-\u51FD\u6570\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#_1-\u51FD\u6570\u5B9A\u4E49" aria-hidden="true">#</a> 1. \u51FD\u6570\u5B9A\u4E49</h1><h3 id="_1-1-1-golang\u51FD\u6570\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#_1-1-1-golang\u51FD\u6570\u7279\u70B9" aria-hidden="true">#</a> 1.1.1. golang\u51FD\u6570\u7279\u70B9\uFF1A</h3><div class="language-markdown ext-md"><pre class="language-markdown"><code>    \u2022 \u65E0\u9700\u58F0\u660E\u539F\u578B\u3002
    \u2022 \u652F\u6301\u4E0D\u5B9A \u53D8\u53C2\u3002
    \u2022 \u652F\u6301\u591A\u8FD4\u56DE\u503C\u3002
    \u2022 \u652F\u6301\u547D\u540D\u8FD4\u56DE\u53C2\u6570\u3002 
    \u2022 \u652F\u6301\u533F\u540D\u51FD\u6570\u548C\u95ED\u5305\u3002
    \u2022 \u51FD\u6570\u4E5F\u662F\u4E00\u79CD\u7C7B\u578B\uFF0C\u4E00\u4E2A\u51FD\u6570\u53EF\u4EE5\u8D4B\u503C\u7ED9\u53D8\u91CF\u3002

<span class="token code keyword">    \u2022 \u4E0D\u652F\u6301 \u5D4C\u5957 (nested) \u4E00\u4E2A\u5305\u4E0D\u80FD\u6709\u4E24\u4E2A\u540D\u5B57\u4E00\u6837\u7684\u51FD\u6570\u3002
    \u2022 \u4E0D\u652F\u6301 \u91CD\u8F7D (overload) 
    \u2022 \u4E0D\u652F\u6301 \u9ED8\u8BA4\u53C2\u6570 (default parameter)\u3002</span>
</code></pre></div><h3 id="_1-1-2-\u51FD\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#_1-1-2-\u51FD\u6570\u58F0\u660E" aria-hidden="true">#</a> 1.1.2. \u51FD\u6570\u58F0\u660E\uFF1A</h3><p>\u51FD\u6570\u58F0\u660E\u5305\u542B\u4E00\u4E2A\u51FD\u6570\u540D\uFF0C\u53C2\u6570\u5217\u8868\uFF0C \u8FD4\u56DE\u503C\u5217\u8868\u548C\u51FD\u6570\u4F53\u3002\u5982\u679C\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u5219\u8FD4\u56DE\u5217\u8868\u53EF\u4EE5\u7701\u7565\u3002\u51FD\u6570\u4ECE\u7B2C\u4E00\u6761\u8BED\u53E5\u5F00\u59CB\u6267\u884C\uFF0C\u76F4\u5230\u6267\u884Creturn\u8BED\u53E5\u6216\u8005\u6267\u884C\u51FD\u6570\u7684\u6700\u540E\u4E00\u6761\u8BED\u53E5\u3002</p><p>\u51FD\u6570\u53EF\u4EE5\u6CA1\u6709\u53C2\u6570\u6216\u63A5\u53D7\u591A\u4E2A\u53C2\u6570\u3002</p><p>\u6CE8\u610F\u7C7B\u578B\u5728\u53D8\u91CF\u540D\u4E4B\u540E \u3002</p><p>\u5F53\u4E24\u4E2A\u6216\u591A\u4E2A\u8FDE\u7EED\u7684\u51FD\u6570\u547D\u540D\u53C2\u6570\u662F\u540C\u4E00\u7C7B\u578B\uFF0C\u5219\u9664\u4E86\u6700\u540E\u4E00\u4E2A\u7C7B\u578B\u4E4B\u5916\uFF0C\u5176\u4ED6\u90FD\u53EF\u4EE5\u7701\u7565\u3002</p><p>\u51FD\u6570\u53EF\u4EE5\u8FD4\u56DE\u4EFB\u610F\u6570\u91CF\u7684\u8FD4\u56DE\u503C\u3002</p><p>\u4F7F\u7528\u5173\u952E\u5B57 func \u5B9A\u4E49\u51FD\u6570\uFF0C\u5DE6\u5927\u62EC\u53F7\u4F9D\u65E7\u4E0D\u80FD\u53E6\u8D77\u4E00\u884C\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">,</span> s <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7C7B\u578B\u76F8\u540C\u7684\u76F8\u90BB\u53C2\u6570\uFF0C\u53C2\u6570\u7C7B\u578B\u53EF\u5408\u5E76\u3002 \u591A\u8FD4\u56DE\u503C\u5FC5\u987B\u7528\u62EC\u53F7\u3002</span>
    n <span class="token operator">:=</span> x <span class="token operator">+</span> y          
    <span class="token keyword">return</span> n<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u51FD\u6570\u662F\u7B2C\u4E00\u7C7B\u5BF9\u8C61\uFF0C\u53EF\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u3002\u5EFA\u8BAE\u5C06\u590D\u6742\u7B7E\u540D\u5B9A\u4E49\u4E3A\u51FD\u6570\u7C7B\u578B\uFF0C\u4EE5\u4FBF\u4E8E\u9605\u8BFB\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>fn <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5B9A\u4E49\u51FD\u6570\u7C7B\u578B\u3002</span>
<span class="token keyword">type</span> FormatFunc <span class="token keyword">func</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> 

<span class="token keyword">func</span> <span class="token function">format</span><span class="token punctuation">(</span>fn FormatFunc<span class="token punctuation">,</span> s <span class="token builtin">string</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    s1 <span class="token operator">:=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u76F4\u63A5\u5C06\u533F\u540D\u51FD\u6570\u5F53\u53C2\u6570\u3002</span>

    s2 <span class="token operator">:=</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;%d, %d&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>

    <span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    100 10, 20
</code></pre></div><p>\u6709\u8FD4\u56DE\u503C\u7684\u51FD\u6570\uFF0C\u5FC5\u987B\u6709\u660E\u786E\u7684\u7EC8\u6B62\u8BED\u53E5\uFF0C\u5426\u5219\u4F1A\u5F15\u53D1\u7F16\u8BD1\u9519\u8BEF\u3002</p><p>\u4F60\u53EF\u80FD\u4F1A\u5076\u5C14\u9047\u5230\u6CA1\u6709\u51FD\u6570\u4F53\u7684\u51FD\u6570\u58F0\u660E\uFF0C\u8FD9\u8868\u793A\u8BE5\u51FD\u6570\u4E0D\u662F\u4EE5Go\u5B9E\u73B0\u7684\u3002\u8FD9\u6837\u7684\u58F0\u660E\u5B9A\u4E49\u4E86\u51FD\u6570\u6807\u8BC6\u7B26\u3002</p><div class="language-text ext-text"><pre class="language-text"><code>    package math

    func Sin(x float64) float //implemented in assembly language
</code></pre></div>`,18),c=[o];function e(u,l){return s(),a("div",null,c)}var k=n(p,[["render",e],["__file","1-\u51FD\u6570\u5B9A\u4E49.html.vue"]]);export{k as default};
