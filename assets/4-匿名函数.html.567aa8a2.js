import{_ as n,o as s,c as a,e as t}from"./app.ad4da1a1.js";const p={},o=t(`<h1 id="_1-\u533F\u540D\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-\u533F\u540D\u51FD\u6570" aria-hidden="true">#</a> 1. \u533F\u540D\u51FD\u6570</h1><h3 id="_1-1-1-\u533F\u540D\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-1-1-\u533F\u540D\u51FD\u6570" aria-hidden="true">#</a> 1.1.1. \u533F\u540D\u51FD\u6570</h3><p>\u533F\u540D\u51FD\u6570\u662F\u6307\u4E0D\u9700\u8981\u5B9A\u4E49\u51FD\u6570\u540D\u7684\u4E00\u79CD\u51FD\u6570\u5B9E\u73B0\u65B9\u5F0F\u30021958\u5E74LISP\u9996\u5148\u91C7\u7528\u533F\u540D\u51FD\u6570\u3002</p><p>\u5728Go\u91CC\u9762\uFF0C\u51FD\u6570\u53EF\u4EE5\u50CF\u666E\u901A\u53D8\u91CF\u4E00\u6837\u88AB\u4F20\u9012\u6216\u4F7F\u7528\uFF0CGo\u8BED\u8A00\u652F\u6301\u968F\u65F6\u5728\u4EE3\u7801\u91CC\u5B9A\u4E49\u533F\u540D\u51FD\u6570\u3002</p><p>\u533F\u540D\u51FD\u6570\u7531\u4E00\u4E2A\u4E0D\u5E26\u51FD\u6570\u540D\u7684\u51FD\u6570\u58F0\u660E\u548C\u51FD\u6570\u4F53\u7EC4\u6210\u3002\u533F\u540D\u51FD\u6570\u7684\u4F18\u8D8A\u6027\u5728\u4E8E\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u51FD\u6570\u5185\u7684\u53D8\u91CF\uFF0C\u4E0D\u5FC5\u7533\u660E\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;math&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getSqrt <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token builtin">float64</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> math<span class="token punctuation">.</span><span class="token function">Sqrt</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">getSqrt</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    2
</code></pre></div><p>\u4E0A\u9762\u5148\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3AgetSqrt \u7684\u53D8\u91CF\uFF0C\u521D\u59CB\u5316\u8BE5\u53D8\u91CF\u65F6\u548C\u4E4B\u524D\u7684\u53D8\u91CF\u521D\u59CB\u5316\u6709\u4E9B\u4E0D\u540C\uFF0C\u4F7F\u7528\u4E86func\uFF0Cfunc\u662F\u5B9A\u4E49\u51FD\u6570\u7684\uFF0C\u53EF\u662F\u8FD9\u4E2A\u51FD\u6570\u548C\u4E0A\u9762\u8BF4\u7684\u51FD\u6570\u6700\u5927\u4E0D\u540C\u5C31\u662F\u6CA1\u6709\u51FD\u6570\u540D\uFF0C\u4E5F\u5C31\u662F\u533F\u540D\u51FD\u6570\u3002\u8FD9\u91CC\u5C06\u4E00\u4E2A\u51FD\u6570\u5F53\u505A\u4E00\u4E2A\u53D8\u91CF\u4E00\u6837\u7684\u64CD\u4F5C\u3002</p><p>Golang\u533F\u540D\u51FD\u6570\u53EF\u8D4B\u503C\u7ED9\u53D8\u91CF\uFF0C\u505A\u4E3A\u7ED3\u6784\u5B57\u6BB5\uFF0C\u6216\u8005\u5728 channel \u91CC\u4F20\u9001\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// --- function variable ---</span>
    fn <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// --- function collection ---</span>
    fns <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span>fns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// --- function as field ---</span>
    d <span class="token operator">:=</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
        fn <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
    <span class="token punctuation">}</span><span class="token punctuation">{</span>
        fn<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&quot;Hello, World!&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// --- channel of function ---</span>
    fc <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    fc <span class="token operator">&lt;-</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&quot;Hello, World!&quot;</span> <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>fc<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    Hello, World!
    101
    Hello, World!
    Hello, World!
</code></pre></div>`,13),c=[o];function e(u,l){return s(),a("div",null,c)}var i=n(p,[["render",e],["__file","4-\u533F\u540D\u51FD\u6570.html.vue"]]);export{i as default};
