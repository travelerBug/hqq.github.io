import{_ as n,o as s,c as a,e as p}from"./app.ad4da1a1.js";const t={},o=p(`<h1 id="_1-slice\u5E95\u5C42\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-slice\u5E95\u5C42\u5B9E\u73B0" aria-hidden="true">#</a> 1. Slice\u5E95\u5C42\u5B9E\u73B0</h1><p><strong>\u672C\u7AE0\u4E0D\u5C5E\u4E8E\u57FA\u7840\u90E8\u5206\u4F46\u662F\u9762\u8BD5\u7ECF\u5E38\u4F1A\u95EE\u5230\u5EFA\u8BAE\u5B66\u5B66</strong></p><p>\u5207\u7247\u662F Go \u4E2D\u7684\u4E00\u79CD\u57FA\u672C\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4F7F\u7528\u8FD9\u79CD\u7ED3\u6784\u53EF\u4EE5\u7528\u6765\u7BA1\u7406\u6570\u636E\u96C6\u5408\u3002\u5207\u7247\u7684\u8BBE\u8BA1\u60F3\u6CD5\u662F\u7531\u52A8\u6001\u6570\u7EC4\u6982\u5FF5\u800C\u6765\uFF0C\u4E3A\u4E86\u5F00\u53D1\u8005\u53EF\u4EE5\u66F4\u52A0\u65B9\u4FBF\u7684\u4F7F\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u53EF\u4EE5\u81EA\u52A8\u589E\u52A0\u548C\u51CF\u5C11\u3002\u4F46\u662F\u5207\u7247\u672C\u8EAB\u5E76\u4E0D\u662F\u52A8\u6001\u6570\u636E\u6216\u8005\u6570\u7EC4\u6307\u9488\u3002\u5207\u7247\u5E38\u89C1\u7684\u64CD\u4F5C\u6709 reslice\u3001append\u3001copy\u3002\u4E0E\u6B64\u540C\u65F6\uFF0C\u5207\u7247\u8FD8\u5177\u6709\u53EF\u7D22\u5F15\uFF0C\u53EF\u8FED\u4EE3\u7684\u4F18\u79C0\u7279\u6027\u3002</p><h3 id="_1-1-1-\u5207\u7247\u548C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_1-1-1-\u5207\u7247\u548C\u6570\u7EC4" aria-hidden="true">#</a> 1.1.1. \u5207\u7247\u548C\u6570\u7EC4</h3><p><img src="https://downloadflies.com/blog-img/image-20220916153323290.png" alt="image-20220916153323290"></p><p>\u5173\u4E8E\u5207\u7247\u548C\u6570\u7EC4\u600E\u4E48\u9009\u62E9\uFF1F\u63A5\u4E0B\u6765\u597D\u597D\u8BA8\u8BBA\u8BA8\u8BBA\u8FD9\u4E2A\u95EE\u9898\u3002</p><p>\u5728 Go \u4E2D\uFF0C\u4E0E C \u6570\u7EC4\u53D8\u91CF\u9690\u5F0F\u4F5C\u4E3A\u6307\u9488\u4F7F\u7528\u4E0D\u540C\uFF0CGo \u6570\u7EC4\u662F\u503C\u7C7B\u578B\uFF0C\u8D4B\u503C\u548C\u51FD\u6570\u4F20\u53C2\u64CD\u4F5C\u90FD\u4F1A\u590D\u5236\u6574\u4E2A\u6570\u7EC4\u6570\u636E\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arrayA <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">}</span>
    <span class="token keyword">var</span> arrayB <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span>

    arrayB <span class="token operator">=</span> arrayA

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;arrayA : %p , %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>arrayA<span class="token punctuation">,</span> arrayA<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;arrayB : %p , %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>arrayB<span class="token punctuation">,</span> arrayB<span class="token punctuation">)</span>

    <span class="token function">testArray</span><span class="token punctuation">(</span>arrayA<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">testArray</span><span class="token punctuation">(</span>x <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;func Array : %p , %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6253\u5370\u7ED3\u679C\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    arrayA : 0xc4200bebf0 , [100 200]
    arrayB : 0xc4200bec00 , [100 200]
    func Array : 0xc4200bec30 , [100 200]
</code></pre></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u4E09\u4E2A\u5185\u5B58\u5730\u5740\u90FD\u4E0D\u540C\uFF0C\u8FD9\u4E5F\u5C31\u9A8C\u8BC1\u4E86 Go \u4E2D\u6570\u7EC4\u8D4B\u503C\u548C\u51FD\u6570\u4F20\u53C2\u90FD\u662F\u503C\u590D\u5236\u7684\u3002\u90A3\u8FD9\u4F1A\u5BFC\u81F4\u4EC0\u4E48\u95EE\u9898\u5462\uFF1F</p><p>\u5047\u60F3\u6BCF\u6B21\u4F20\u53C2\u90FD\u7528\u6570\u7EC4\uFF0C\u90A3\u4E48\u6BCF\u6B21\u6570\u7EC4\u90FD\u8981\u88AB\u590D\u5236\u4E00\u904D\u3002\u5982\u679C\u6570\u7EC4\u5927\u5C0F\u6709 100\u4E07\uFF0C\u572864\u4F4D\u673A\u5668\u4E0A\u5C31\u9700\u8981\u82B1\u8D39\u5927\u7EA6 800W \u5B57\u8282\uFF0C\u5373 8MB \u5185\u5B58\u3002\u8FD9\u6837\u4F1A\u6D88\u8017\u6389\u5927\u91CF\u7684\u5185\u5B58\u3002\u4E8E\u662F\u4E4E\u6709\u4EBA\u60F3\u5230\uFF0C\u51FD\u6570\u4F20\u53C2\u7528\u6570\u7EC4\u7684\u6307\u9488\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arrayA <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">}</span>
    <span class="token function">testArrayPoint</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>arrayA<span class="token punctuation">)</span>   <span class="token comment">// 1.\u4F20\u6570\u7EC4\u6307\u9488</span>
    arrayB <span class="token operator">:=</span> arrayA<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    <span class="token function">testArrayPoint</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>arrayB<span class="token punctuation">)</span>   <span class="token comment">// 2.\u4F20\u5207\u7247</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;arrayA : %p , %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>arrayA<span class="token punctuation">,</span> arrayA<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">testArrayPoint</span><span class="token punctuation">(</span>x <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;func Array : %p , %v\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token operator">*</span>x<span class="token punctuation">)</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">100</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6253\u5370\u7ED3\u679C\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    func Array : 0xc4200b0140 , [100 200]
    func Array : 0xc4200b0180 , [100 300]
    arrayA : 0xc4200b0140 , [100 400]
</code></pre></div><p>\u8FD9\u4E5F\u5C31\u8BC1\u660E\u4E86\u6570\u7EC4\u6307\u9488\u786E\u5B9E\u5230\u8FBE\u4E86\u6211\u4EEC\u60F3\u8981\u7684\u6548\u679C\u3002\u73B0\u5728\u5C31\u7B97\u662F\u4F20\u516510\u4EBF\u7684\u6570\u7EC4\uFF0C\u4E5F\u53EA\u9700\u8981\u518D\u6808\u4E0A\u5206\u914D\u4E00\u4E2A8\u4E2A\u5B57\u8282\u7684\u5185\u5B58\u7ED9\u6307\u9488\u5C31\u53EF\u4EE5\u4E86\u3002\u8FD9\u6837\u66F4\u52A0\u9AD8\u6548\u7684\u5229\u7528\u5185\u5B58\uFF0C\u6027\u80FD\u4E5F\u6BD4\u4E4B\u524D\u7684\u597D\u3002</p><p>\u4E0D\u8FC7\u4F20\u6307\u9488\u4F1A\u6709\u4E00\u4E2A\u5F0A\u7AEF\uFF0C\u4ECE\u6253\u5370\u7ED3\u679C\u53EF\u4EE5\u770B\u5230\uFF0C\u7B2C\u4E00\u884C\u548C\u7B2C\u4E09\u884C\u6307\u9488\u5730\u5740\u90FD\u662F\u540C\u4E00\u4E2A\uFF0C\u4E07\u4E00\u539F\u6570\u7EC4\u7684\u6307\u9488\u6307\u5411\u66F4\u6539\u4E86\uFF0C\u90A3\u4E48\u51FD\u6570\u91CC\u9762\u7684\u6307\u9488\u6307\u5411\u90FD\u4F1A\u8DDF\u7740\u66F4\u6539\u3002</p><p>\u5207\u7247\u7684\u4F18\u52BF\u4E5F\u5C31\u8868\u73B0\u51FA\u6765\u4E86\u3002\u7528\u5207\u7247\u4F20\u6570\u7EC4\u53C2\u6570\uFF0C\u65E2\u53EF\u4EE5\u8FBE\u5230\u8282\u7EA6\u5185\u5B58\u7684\u76EE\u7684\uFF0C\u4E5F\u53EF\u4EE5\u8FBE\u5230\u5408\u7406\u5904\u7406\u597D\u5171\u4EAB\u5185\u5B58\u7684\u95EE\u9898\u3002\u6253\u5370\u7ED3\u679C\u7B2C\u4E8C\u884C\u5C31\u662F\u5207\u7247\uFF0C\u5207\u7247\u7684\u6307\u9488\u548C\u539F\u6765\u6570\u7EC4\u7684\u6307\u9488\u662F\u4E0D\u540C\u7684\u3002</p><p>\u7531\u6B64\u6211\u4EEC\u53EF\u4EE5\u5F97\u51FA\u7ED3\u8BBA\uFF1A</p><p>\u628A\u7B2C\u4E00\u4E2A\u5927\u6570\u7EC4\u4F20\u9012\u7ED9\u51FD\u6570\u4F1A\u6D88\u8017\u5F88\u591A\u5185\u5B58\uFF0C\u91C7\u7528\u5207\u7247\u7684\u65B9\u5F0F\u4F20\u53C2\u53EF\u4EE5\u907F\u514D\u4E0A\u8FF0\u95EE\u9898\u3002\u5207\u7247\u662F\u5F15\u7528\u4F20\u9012\uFF0C\u6240\u4EE5\u5B83\u4EEC\u4E0D\u9700\u8981\u4F7F\u7528\u989D\u5916\u7684\u5185\u5B58\u5E76\u4E14\u6BD4\u4F7F\u7528\u6570\u7EC4\u66F4\u6709\u6548\u7387\u3002</p><p>\u4F46\u662F\uFF0C\u4F9D\u65E7\u6709\u53CD\u4F8B\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;testing&quot;</span>

<span class="token keyword">func</span> <span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> x <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token builtin">int</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> x
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> x
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">BenchmarkArray</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">BenchmarkSlice</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6211\u4EEC\u505A\u4E00\u6B21\u6027\u80FD\u6D4B\u8BD5\uFF0C\u5E76\u4E14\u7981\u7528\u5185\u8054\u548C\u4F18\u5316\uFF0C\u6765\u89C2\u5BDF\u5207\u7247\u7684\u5806\u4E0A\u5185\u5B58\u5206\u914D\u7684\u60C5\u51B5\u3002</p><div class="language-text ext-text"><pre class="language-text"><code>     go test -bench . -benchmem -gcflags &quot;-N -l&quot;
</code></pre></div><p>\u8F93\u51FA\u7ED3\u679C\u6BD4\u8F83\u201C\u4EE4\u4EBA\u610F\u5916\u201D\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    BenchmarkArray-4          500000              3637 ns/op               0 B/op          0 alloc s/op
    BenchmarkSlice-4          300000              4055 ns/op            8192 B/op          1 alloc s/op
</code></pre></div><p>\u89E3\u91CA\u4E00\u4E0B\u4E0A\u8FF0\u7ED3\u679C\uFF0C\u5728\u6D4B\u8BD5 Array \u7684\u65F6\u5019\uFF0C\u7528\u7684\u662F4\u6838\uFF0C\u5FAA\u73AF\u6B21\u6570\u662F500000\uFF0C\u5E73\u5747\u6BCF\u6B21\u6267\u884C\u65F6\u95F4\u662F3637 ns\uFF0C\u6BCF\u6B21\u6267\u884C\u5806\u4E0A\u5206\u914D\u5185\u5B58\u603B\u91CF\u662F0\uFF0C\u5206\u914D\u6B21\u6570\u4E5F\u662F0 \u3002</p><p>\u800C\u5207\u7247\u7684\u7ED3\u679C\u5C31\u201C\u5DEE\u201D\u4E00\u70B9\uFF0C\u540C\u6837\u4E5F\u662F\u7528\u7684\u662F4\u6838\uFF0C\u5FAA\u73AF\u6B21\u6570\u662F300000\uFF0C\u5E73\u5747\u6BCF\u6B21\u6267\u884C\u65F6\u95F4\u662F4055 ns\uFF0C\u4F46\u662F\u6BCF\u6B21\u6267\u884C\u4E00\u6B21\uFF0C\u5806\u4E0A\u5206\u914D\u5185\u5B58\u603B\u91CF\u662F8192\uFF0C\u5206\u914D\u6B21\u6570\u4E5F\u662F1 \u3002</p><p>\u8FD9\u6837\u5BF9\u6BD4\u770B\u6765\uFF0C\u5E76\u975E\u6240\u6709\u65F6\u5019\u90FD\u9002\u5408\u7528\u5207\u7247\u4EE3\u66FF\u6570\u7EC4\uFF0C\u56E0\u4E3A\u5207\u7247\u5E95\u5C42\u6570\u7EC4\u53EF\u80FD\u4F1A\u5728\u5806\u4E0A\u5206\u914D\u5185\u5B58\uFF0C\u800C\u4E14\u5C0F\u6570\u7EC4\u5728\u6808\u4E0A\u62F7\u8D1D\u7684\u6D88\u8017\u4E5F\u672A\u5FC5\u6BD4 make \u6D88\u8017\u5927\u3002</p><h3 id="_1-1-2-\u5207\u7247\u7684\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_1-1-2-\u5207\u7247\u7684\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> 1.1.2. \u5207\u7247\u7684\u6570\u636E\u7ED3\u6784</h3><p>\u5207\u7247\u672C\u8EAB\u5E76\u4E0D\u662F\u52A8\u6001\u6570\u7EC4\u6216\u8005\u6570\u7EC4\u6307\u9488\u3002\u5B83\u5185\u90E8\u5B9E\u73B0\u7684\u6570\u636E\u7ED3\u6784\u901A\u8FC7\u6307\u9488\u5F15\u7528\u5E95\u5C42\u6570\u7EC4\uFF0C\u8BBE\u5B9A\u76F8\u5173\u5C5E\u6027\u5C06\u6570\u636E\u8BFB\u5199\u64CD\u4F5C\u9650\u5B9A\u5728\u6307\u5B9A\u7684\u533A\u57DF\u5185\u3002\u5207\u7247\u672C\u8EAB\u662F\u4E00\u4E2A\u53EA\u8BFB\u5BF9\u8C61\uFF0C\u5176\u5DE5\u4F5C\u673A\u5236\u7C7B\u4F3C\u6570\u7EC4\u6307\u9488\u7684\u4E00\u79CD\u5C01\u88C5\u3002</p><p>\u5207\u7247\uFF08slice\uFF09\u662F\u5BF9\u6570\u7EC4\u4E00\u4E2A\u8FDE\u7EED\u7247\u6BB5\u7684\u5F15\u7528\uFF0C\u6240\u4EE5\u5207\u7247\u662F\u4E00\u4E2A\u5F15\u7528\u7C7B\u578B\uFF08\u56E0\u6B64\u66F4\u7C7B\u4F3C\u4E8E C/C++ \u4E2D\u7684\u6570\u7EC4\u7C7B\u578B\uFF0C\u6216\u8005 Python \u4E2D\u7684 list \u7C7B\u578B\uFF09\u3002\u8FD9\u4E2A\u7247\u6BB5\u53EF\u4EE5\u662F\u6574\u4E2A\u6570\u7EC4\uFF0C\u6216\u8005\u662F\u7531\u8D77\u59CB\u548C\u7EC8\u6B62\u7D22\u5F15\u6807\u8BC6\u7684\u4E00\u4E9B\u9879\u7684\u5B50\u96C6\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u7EC8\u6B62\u7D22\u5F15\u6807\u8BC6\u7684\u9879\u4E0D\u5305\u62EC\u5728\u5207\u7247\u5185\u3002\u5207\u7247\u63D0\u4F9B\u4E86\u4E00\u4E2A\u4E0E\u6307\u5411\u6570\u7EC4\u7684\u52A8\u6001\u7A97\u53E3\u3002</p><p>\u7ED9\u5B9A\u9879\u7684\u5207\u7247\u7D22\u5F15\u53EF\u80FD\u6BD4\u76F8\u5173\u6570\u7EC4\u7684\u76F8\u540C\u5143\u7D20\u7684\u7D22\u5F15\u5C0F\u3002\u548C\u6570\u7EC4\u4E0D\u540C\u7684\u662F\uFF0C\u5207\u7247\u7684\u957F\u5EA6\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u4FEE\u6539\uFF0C\u6700\u5C0F\u4E3A 0 \u6700\u5927\u4E3A\u76F8\u5173\u6570\u7EC4\u7684\u957F\u5EA6\uFF1A\u5207\u7247\u662F\u4E00\u4E2A\u957F\u5EA6\u53EF\u53D8\u7684\u6570\u7EC4\u3002</p><p>Slice \u7684\u6570\u636E\u7ED3\u6784\u5B9A\u4E49\u5982\u4E0B:</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">type</span> slice <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    array unsafe<span class="token punctuation">.</span>Pointer
    <span class="token builtin">len</span>   <span class="token builtin">int</span>
    <span class="token builtin">cap</span>   <span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre></div><p><img src="https://downloadflies.com/blog-img/image-20220916153347452.png" alt="image-20220916153347452"></p><p>\u5207\u7247\u7684\u7ED3\u6784\u4F53\u75313\u90E8\u5206\u6784\u6210\uFF0CPointer \u662F\u6307\u5411\u4E00\u4E2A\u6570\u7EC4\u7684\u6307\u9488\uFF0Clen \u4EE3\u8868\u5F53\u524D\u5207\u7247\u7684\u957F\u5EA6\uFF0Ccap \u662F\u5F53\u524D\u5207\u7247\u7684\u5BB9\u91CF\u3002cap \u603B\u662F\u5927\u4E8E\u7B49\u4E8E len \u7684\u3002</p><p><img src="https://downloadflies.com/blog-img/image-20220916153403218.png" alt="image-20220916153403218"></p><p>\u5982\u679C\u60F3\u4ECE slice \u4E2D\u5F97\u5230\u4E00\u5757\u5185\u5B58\u5730\u5740\uFF0C\u53EF\u4EE5\u8FD9\u6837\u505A\uFF1A</p><div class="language-go ext-go"><pre class="language-go"><code>s <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
ptr <span class="token operator">:=</span> unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5982\u679C\u53CD\u8FC7\u6765\u5462\uFF1F\u4ECE Go \u7684\u5185\u5B58\u5730\u5740\u4E2D\u6784\u9020\u4E00\u4E2A slice\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">var</span> ptr unsafe<span class="token punctuation">.</span>Pointer
<span class="token keyword">var</span> s1 <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    addr <span class="token builtin">uintptr</span>
    <span class="token builtin">len</span> <span class="token builtin">int</span>
    <span class="token builtin">cap</span> <span class="token builtin">int</span>
<span class="token punctuation">}</span><span class="token punctuation">{</span>ptr<span class="token punctuation">,</span> length<span class="token punctuation">,</span> length<span class="token punctuation">}</span>
s <span class="token operator">:=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s1<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>\u6784\u9020\u4E00\u4E2A\u865A\u62DF\u7684\u7ED3\u6784\u4F53\uFF0C\u628A slice \u7684\u6570\u636E\u7ED3\u6784\u62FC\u51FA\u6765\u3002</p><p>\u5F53\u7136\u8FD8\u6709\u66F4\u52A0\u76F4\u63A5\u7684\u65B9\u6CD5\uFF0C\u5728 Go \u7684\u53CD\u5C04\u4E2D\u5C31\u5B58\u5728\u4E00\u4E2A\u4E0E\u4E4B\u5BF9\u5E94\u7684\u6570\u636E\u7ED3\u6784 SliceHeader\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u5B83\u6765\u6784\u9020\u4E00\u4E2A slice</p><div class="language-go ext-go"><pre class="language-go"><code>    <span class="token keyword">var</span> o <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
    sliceHeader <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">*</span>reflect<span class="token punctuation">.</span>SliceHeader<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    sliceHeader<span class="token punctuation">.</span>Cap <span class="token operator">=</span> length
    sliceHeader<span class="token punctuation">.</span>Len <span class="token operator">=</span> length
    sliceHeader<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span>
</code></pre></div><h3 id="_1-1-3-\u521B\u5EFA\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#_1-1-3-\u521B\u5EFA\u5207\u7247" aria-hidden="true">#</a> 1.1.3. \u521B\u5EFA\u5207\u7247</h3><p>make \u51FD\u6570\u5141\u8BB8\u5728\u8FD0\u884C\u671F\u52A8\u6001\u6307\u5B9A\u6570\u7EC4\u957F\u5EA6\uFF0C\u7ED5\u5F00\u4E86\u6570\u7EC4\u7C7B\u578B\u5FC5\u987B\u4F7F\u7528\u7F16\u8BD1\u671F\u5E38\u91CF\u7684\u9650\u5236\u3002</p><p>\u521B\u5EFA\u5207\u7247\u6709\u4E24\u79CD\u5F62\u5F0F\uFF0Cmake \u521B\u5EFA\u5207\u7247\uFF0C\u7A7A\u5207\u7247\u3002</p><h4 id="make-\u548C\u5207\u7247\u5B57\u9762\u91CF" tabindex="-1"><a class="header-anchor" href="#make-\u548C\u5207\u7247\u5B57\u9762\u91CF" aria-hidden="true">#</a> make \u548C\u5207\u7247\u5B57\u9762\u91CF</h4><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">makeslice</span><span class="token punctuation">(</span>et <span class="token operator">*</span>_type<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span> <span class="token builtin">int</span><span class="token punctuation">)</span> slice <span class="token punctuation">{</span>
    <span class="token comment">// \u6839\u636E\u5207\u7247\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u83B7\u53D6\u5207\u7247\u7684\u6700\u5927\u5BB9\u91CF</span>
    maxElements <span class="token operator">:=</span> <span class="token function">maxSliceCap</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
    <span class="token comment">// \u6BD4\u8F83\u5207\u7247\u7684\u957F\u5EA6\uFF0C\u957F\u5EA6\u503C\u57DF\u5E94\u8BE5\u5728[0,maxElements]\u4E4B\u95F4</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxElements <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;makeslice: len out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6BD4\u8F83\u5207\u7247\u7684\u5BB9\u91CF\uFF0C\u5BB9\u91CF\u503C\u57DF\u5E94\u8BE5\u5728[len,maxElements]\u4E4B\u95F4</span>
    <span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&lt;</span> <span class="token builtin">len</span> <span class="token operator">||</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxElements <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;makeslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6839\u636E\u5207\u7247\u7684\u5BB9\u91CF\u7533\u8BF7\u5185\u5B58</span>
    p <span class="token operator">:=</span> <span class="token function">mallocgc</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token operator">*</span><span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span><span class="token punctuation">,</span> et<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8FD4\u56DE\u7533\u8BF7\u597D\u5185\u5B58\u7684\u5207\u7247\u7684\u9996\u5730\u5740</span>
    <span class="token keyword">return</span> slice<span class="token punctuation">{</span>p<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD8\u6709\u4E00\u4E2A int64 \u7684\u7248\u672C\uFF1A</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">makeslice64</span><span class="token punctuation">(</span>et <span class="token operator">*</span>_type<span class="token punctuation">,</span> len64<span class="token punctuation">,</span> cap64 <span class="token builtin">int64</span><span class="token punctuation">)</span> slice <span class="token punctuation">{</span>
    <span class="token builtin">len</span> <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>len64<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">!=</span> len64 <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;makeslice: len out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token builtin">cap</span> <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>cap64<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">!=</span> cap64 <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;makeslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">makeslice</span><span class="token punctuation">(</span>et<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5B9E\u73B0\u539F\u7406\u548C\u4E0A\u9762\u7684\u662F\u4E00\u6837\u7684\uFF0C\u53EA\u4E0D\u8FC7\u591A\u4E86\u628A int64 \u8F6C\u6362\u6210 int \u8FD9\u4E00\u6B65\u7F62\u4E86\u3002</p><p><img src="https://downloadflies.com/blog-img/image-20220916153049959.png" alt="image-20220916153049959"></p><p>\u4E0A\u56FE\u662F\u7528 make \u51FD\u6570\u521B\u5EFA\u7684\u4E00\u4E2A len = 4\uFF0C cap = 6 \u7684\u5207\u7247\u3002\u5185\u5B58\u7A7A\u95F4\u7533\u8BF7\u4E866\u4E2A int \u7C7B\u578B\u7684\u5185\u5B58\u5927\u5C0F\u3002\u7531\u4E8E len = 4\uFF0C\u6240\u4EE5\u540E\u97622\u4E2A\u6682\u65F6\u8BBF\u95EE\u4E0D\u5230\uFF0C\u4F46\u662F\u5BB9\u91CF\u8FD8\u662F\u5728\u7684\u3002\u8FD9\u65F6\u5019\u6570\u7EC4\u91CC\u9762\u6BCF\u4E2A\u53D8\u91CF\u90FD\u662F0 \u3002</p><p>\u9664\u4E86 make \u51FD\u6570\u53EF\u4EE5\u521B\u5EFA\u5207\u7247\u4EE5\u5916\uFF0C\u5B57\u9762\u91CF\u4E5F\u53EF\u4EE5\u521B\u5EFA\u5207\u7247\u3002</p><p><img src="https://downloadflies.com/blog-img/image-20220916153116560.png" alt="image-20220916153116560"></p><p>\u8FD9\u91CC\u662F\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u7684\u4E00\u4E2A len = 6\uFF0Ccap = 6 \u7684\u5207\u7247\uFF0C\u8FD9\u65F6\u5019\u6570\u7EC4\u91CC\u9762\u6BCF\u4E2A\u5143\u7D20\u7684\u503C\u90FD\u521D\u59CB\u5316\u5B8C\u6210\u4E86\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F [ ] \u91CC\u9762\u4E0D\u8981\u5199\u6570\u7EC4\u7684\u5BB9\u91CF\uFF0C\u56E0\u4E3A\u5982\u679C\u5199\u4E86\u4E2A\u6570\u4EE5\u540E\u5C31\u662F\u6570\u7EC4\u4E86\uFF0C\u800C\u4E0D\u662F\u5207\u7247\u4E86\u3002</p><p><img src="https://downloadflies.com/blog-img/image-20220916153421648.png" alt="image-20220916153421648"></p><p>\u8FD8\u6709\u4E00\u79CD\u7B80\u5355\u7684\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\u7684\u65B9\u6CD5\u3002\u5982\u4E0A\u56FE\u3002\u4E0A\u56FE\u5C31 Slice A \u521B\u5EFA\u51FA\u4E86\u4E00\u4E2A len = 3\uFF0Ccap = 3 \u7684\u5207\u7247\u3002\u4ECE\u539F\u6570\u7EC4\u7684\u7B2C\u4E8C\u4F4D\u5143\u7D20(0\u662F\u7B2C\u4E00\u4F4D)\u5F00\u59CB\u5207\uFF0C\u4E00\u76F4\u5207\u5230\u7B2C\u56DB\u4F4D\u4E3A\u6B62(\u4E0D\u5305\u62EC\u7B2C\u4E94\u4F4D)\u3002\u540C\u7406\uFF0CSlice B \u521B\u5EFA\u51FA\u4E86\u4E00\u4E2A len = 2\uFF0Ccap = 4 \u7684\u5207\u7247\u3002</p><h4 id="nil-\u548C\u7A7A\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#nil-\u548C\u7A7A\u5207\u7247" aria-hidden="true">#</a> nil \u548C\u7A7A\u5207\u7247</h4><p>nil \u5207\u7247\u548C\u7A7A\u5207\u7247\u4E5F\u662F\u5E38\u7528\u7684\u3002</p><div class="language-text ext-text"><pre class="language-text"><code>    var slice []int
</code></pre></div><p><img src="https://downloadflies.com/blog-img/image-20220916153135422.png" alt="image-20220916153135422"></p><p>nil \u5207\u7247\u88AB\u7528\u5728\u5F88\u591A\u6807\u51C6\u5E93\u548C\u5185\u7F6E\u51FD\u6570\u4E2D\uFF0C\u63CF\u8FF0\u4E00\u4E2A\u4E0D\u5B58\u5728\u7684\u5207\u7247\u7684\u65F6\u5019\uFF0C\u5C31\u9700\u8981\u7528\u5230 nil \u5207\u7247\u3002\u6BD4\u5982\u51FD\u6570\u5728\u53D1\u751F\u5F02\u5E38\u7684\u65F6\u5019\uFF0C\u8FD4\u56DE\u7684\u5207\u7247\u5C31\u662F nil \u5207\u7247\u3002nil \u5207\u7247\u7684\u6307\u9488\u6307\u5411 nil\u3002</p><p>\u7A7A\u5207\u7247\u4E00\u822C\u4F1A\u7528\u6765\u8868\u793A\u4E00\u4E2A\u7A7A\u7684\u96C6\u5408\u3002\u6BD4\u5982\u6570\u636E\u5E93\u67E5\u8BE2\uFF0C\u4E00\u6761\u7ED3\u679C\u4E5F\u6CA1\u6709\u67E5\u5230\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u5207\u7247\u3002</p><div class="language-text ext-text"><pre class="language-text"><code>    silce := make( []int , 0 )
    slice := []int{ }
</code></pre></div><p><img src="https://downloadflies.com/blog-img/image-20220916153438375.png" alt="image-20220916153438375"></p><p>\u7A7A\u5207\u7247\u548C nil \u5207\u7247\u7684\u533A\u522B\u5728\u4E8E\uFF0C\u7A7A\u5207\u7247\u6307\u5411\u7684\u5730\u5740\u4E0D\u662Fnil\uFF0C\u6307\u5411\u7684\u662F\u4E00\u4E2A\u5185\u5B58\u5730\u5740\uFF0C\u4F46\u662F\u5B83\u6CA1\u6709\u5206\u914D\u4EFB\u4F55\u5185\u5B58\u7A7A\u95F4\uFF0C\u5373\u5E95\u5C42\u5143\u7D20\u5305\u542B0\u4E2A\u5143\u7D20\u3002</p><p>\u6700\u540E\u9700\u8981\u8BF4\u660E\u7684\u4E00\u70B9\u662F\u3002\u4E0D\u7BA1\u662F\u4F7F\u7528 nil \u5207\u7247\u8FD8\u662F\u7A7A\u5207\u7247\uFF0C\u5BF9\u5176\u8C03\u7528\u5185\u7F6E\u51FD\u6570 append\uFF0Clen \u548C cap \u7684\u6548\u679C\u90FD\u662F\u4E00\u6837\u7684\u3002</p><h3 id="_1-1-4-\u5207\u7247\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#_1-1-4-\u5207\u7247\u6269\u5BB9" aria-hidden="true">#</a> 1.1.4. \u5207\u7247\u6269\u5BB9</h3><p>\u5F53\u4E00\u4E2A\u5207\u7247\u7684\u5BB9\u91CF\u6EE1\u4E86\uFF0C\u5C31\u9700\u8981\u6269\u5BB9\u4E86\u3002\u600E\u4E48\u6269\uFF0C\u7B56\u7565\u662F\u4EC0\u4E48\uFF1F</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">growslice</span><span class="token punctuation">(</span>et <span class="token operator">*</span>_type<span class="token punctuation">,</span> old slice<span class="token punctuation">,</span> <span class="token builtin">cap</span> <span class="token builtin">int</span><span class="token punctuation">)</span> slice <span class="token punctuation">{</span>
    <span class="token keyword">if</span> raceenabled <span class="token punctuation">{</span>
        callerpc <span class="token operator">:=</span> <span class="token function">getcallerpc</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>et<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">racereadrangepc</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callerpc<span class="token punctuation">,</span> <span class="token function">funcPC</span><span class="token punctuation">(</span>growslice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> msanenabled <span class="token punctuation">{</span>
        <span class="token function">msanread</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> et<span class="token punctuation">.</span>size <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u65B0\u8981\u6269\u5BB9\u7684\u5BB9\u91CF\u6BD4\u539F\u6765\u7684\u5BB9\u91CF\u8FD8\u8981\u5C0F\uFF0C\u8FD9\u4EE3\u8868\u8981\u7F29\u5BB9\u4E86\uFF0C\u90A3\u4E48\u53EF\u4EE5\u76F4\u63A5\u62A5panic\u4E86\u3002</span>
        <span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&lt;</span> old<span class="token punctuation">.</span><span class="token builtin">cap</span> <span class="token punctuation">{</span>
            <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;growslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5982\u679C\u5F53\u524D\u5207\u7247\u7684\u5927\u5C0F\u4E3A0\uFF0C\u8FD8\u8C03\u7528\u4E86\u6269\u5BB9\u65B9\u6CD5\uFF0C\u90A3\u4E48\u5C31\u65B0\u751F\u6210\u4E00\u4E2A\u65B0\u7684\u5BB9\u91CF\u7684\u5207\u7247\u8FD4\u56DE\u3002</span>
        <span class="token keyword">return</span> slice<span class="token punctuation">{</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>zerobase<span class="token punctuation">)</span><span class="token punctuation">,</span> old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

  <span class="token comment">// \u8FD9\u91CC\u5C31\u662F\u6269\u5BB9\u7684\u7B56\u7565</span>
    newcap <span class="token operator">:=</span> old<span class="token punctuation">.</span><span class="token builtin">cap</span>
    doublecap <span class="token operator">:=</span> newcap <span class="token operator">+</span> newcap
    <span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&gt;</span> doublecap <span class="token punctuation">{</span>
        newcap <span class="token operator">=</span> <span class="token builtin">cap</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> old<span class="token punctuation">.</span><span class="token builtin">len</span> <span class="token operator">&lt;</span> <span class="token number">1024</span> <span class="token punctuation">{</span>
            newcap <span class="token operator">=</span> doublecap
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> newcap <span class="token operator">&lt;</span> <span class="token builtin">cap</span> <span class="token punctuation">{</span>
                newcap <span class="token operator">+=</span> newcap <span class="token operator">/</span> <span class="token number">4</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BA1\u7B97\u65B0\u7684\u5207\u7247\u7684\u5BB9\u91CF\uFF0C\u957F\u5EA6\u3002</span>
    <span class="token keyword">var</span> lenmem<span class="token punctuation">,</span> newlenmem<span class="token punctuation">,</span> capmem <span class="token builtin">uintptr</span>
    <span class="token keyword">const</span> ptrSize <span class="token operator">=</span> unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">switch</span> et<span class="token punctuation">.</span>size <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
        lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span>
        newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span>
        capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span><span class="token punctuation">)</span>
        newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem<span class="token punctuation">)</span>
    <span class="token keyword">case</span> ptrSize<span class="token punctuation">:</span>
        lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">*</span> ptrSize
        newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">*</span> ptrSize
        capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">*</span> ptrSize<span class="token punctuation">)</span>
        newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem <span class="token operator">/</span> ptrSize<span class="token punctuation">)</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>
        lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">*</span> et<span class="token punctuation">.</span>size
        newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">*</span> et<span class="token punctuation">.</span>size
        capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">*</span> et<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
        newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem <span class="token operator">/</span> et<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5224\u65AD\u975E\u6CD5\u7684\u503C\uFF0C\u4FDD\u8BC1\u5BB9\u91CF\u662F\u5728\u589E\u52A0\uFF0C\u5E76\u4E14\u5BB9\u91CF\u4E0D\u8D85\u8FC7\u6700\u5927\u5BB9\u91CF</span>
    <span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&lt;</span> old<span class="token punctuation">.</span><span class="token builtin">cap</span> <span class="token operator">||</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token function">maxSliceCap</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;growslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> p unsafe<span class="token punctuation">.</span>Pointer
    <span class="token keyword">if</span> et<span class="token punctuation">.</span>kind<span class="token operator">&amp;</span>kindNoPointers <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5728\u8001\u7684\u5207\u7247\u540E\u9762\u7EE7\u7EED\u6269\u5145\u5BB9\u91CF</span>
        p <span class="token operator">=</span> <span class="token function">mallocgc</span><span class="token punctuation">(</span>capmem<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5C06 lenmem \u8FD9\u4E2A\u591A\u4E2A bytes \u4ECE old.array\u5730\u5740 \u62F7\u8D1D\u5230 p \u7684\u5730\u5740\u5904</span>
        <span class="token function">memmove</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> lenmem<span class="token punctuation">)</span>
        <span class="token comment">// \u5148\u5C06 P \u5730\u5740\u52A0\u4E0A\u65B0\u7684\u5BB9\u91CF\u5F97\u5230\u65B0\u5207\u7247\u5BB9\u91CF\u7684\u5730\u5740\uFF0C\u7136\u540E\u5C06\u65B0\u5207\u7247\u5BB9\u91CF\u5730\u5740\u540E\u9762\u7684 capmem-newlenmem \u4E2A bytes \u8FD9\u5757\u5185\u5B58\u521D\u59CB\u5316\u3002\u4E3A\u4E4B\u540E\u7EE7\u7EED append() \u64CD\u4F5C\u817E\u51FA\u7A7A\u95F4\u3002</span>
        <span class="token function">memclrNoHeapPointers</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> newlenmem<span class="token punctuation">)</span><span class="token punctuation">,</span> capmem<span class="token operator">-</span>newlenmem<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u91CD\u65B0\u7533\u8BF7\u65B0\u7684\u6570\u7EC4\u7ED9\u65B0\u5207\u7247</span>
        <span class="token comment">// \u91CD\u65B0\u7533\u8BF7 capmen \u8FD9\u4E2A\u5927\u7684\u5185\u5B58\u5730\u5740\uFF0C\u5E76\u4E14\u521D\u59CB\u5316\u4E3A0\u503C</span>
        p <span class="token operator">=</span> <span class="token function">mallocgc</span><span class="token punctuation">(</span>capmem<span class="token punctuation">,</span> et<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token operator">!</span>writeBarrier<span class="token punctuation">.</span>enabled <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u8FD8\u4E0D\u80FD\u6253\u5F00\u5199\u9501\uFF0C\u90A3\u4E48\u53EA\u80FD\u628A lenmem \u5927\u5C0F\u7684 bytes \u5B57\u8282\u4ECE old.array \u62F7\u8D1D\u5230 p \u7684\u5730\u5740\u5904</span>
            <span class="token function">memmove</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> lenmem<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5FAA\u73AF\u62F7\u8D1D\u8001\u7684\u5207\u7247\u7684\u503C</span>
            <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lenmem<span class="token punctuation">;</span> i <span class="token operator">+=</span> et<span class="token punctuation">.</span>size <span class="token punctuation">{</span>
                <span class="token function">typedmemmove</span><span class="token punctuation">(</span>et<span class="token punctuation">,</span> <span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">add</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8FD4\u56DE\u6700\u7EC8\u65B0\u5207\u7247\uFF0C\u5BB9\u91CF\u66F4\u65B0\u4E3A\u6700\u65B0\u6269\u5BB9\u4E4B\u540E\u7684\u5BB9\u91CF</span>
    <span class="token keyword">return</span> slice<span class="token punctuation">{</span>p<span class="token punctuation">,</span> old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">,</span> newcap<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E0A\u8FF0\u5C31\u662F\u6269\u5BB9\u7684\u5B9E\u73B0\u3002\u4E3B\u8981\u9700\u8981\u5173\u6CE8\u7684\u6709\u4E24\u70B9\uFF0C\u4E00\u4E2A\u662F\u6269\u5BB9\u65F6\u5019\u7684\u7B56\u7565\uFF0C\u8FD8\u6709\u4E00\u4E2A\u5C31\u662F\u6269\u5BB9\u662F\u751F\u6210\u5168\u65B0\u7684\u5185\u5B58\u5730\u5740\u8FD8\u662F\u5728\u539F\u6765\u7684\u5730\u5740\u540E\u8FFD\u52A0\u3002</p><h4 id="\u6269\u5BB9\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#\u6269\u5BB9\u7B56\u7565" aria-hidden="true">#</a> \u6269\u5BB9\u7B56\u7565</h4><p>\u5148\u770B\u770B\u6269\u5BB9\u7B56\u7565\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    slice <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
    newSlice <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    newSlice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    Before slice = [10 20 30 40], Pointer = 0xc4200b0140, len = 4, cap = 4
    Before newSlice = [10 20 30 40 50], Pointer = 0xc4200b0180, len = 5, cap = 8
    After slice = [10 20 30 40], Pointer = 0xc4200b0140, len = 4, cap = 4
    After newSlice = [10 30 30 40 50], Pointer = 0xc4200b0180, len = 5, cap = 8
</code></pre></div><p>\u7528\u56FE\u8868\u793A\u51FA\u4E0A\u8FF0\u8FC7\u7A0B\u3002</p><p><img src="https://downloadflies.com/blog-img/image-20220916153159949.png" alt="image-20220916153159949"></p><p>\u4ECE\u56FE\u4E0A\u6211\u4EEC\u53EF\u4EE5\u5F88\u5BB9\u6613\u7684\u770B\u51FA\uFF0C\u65B0\u7684\u5207\u7247\u548C\u4E4B\u524D\u7684\u5207\u7247\u5DF2\u7ECF\u4E0D\u540C\u4E86\uFF0C\u56E0\u4E3A\u65B0\u7684\u5207\u7247\u66F4\u6539\u4E86\u4E00\u4E2A\u503C\uFF0C\u5E76\u6CA1\u6709\u5F71\u54CD\u5230\u539F\u6765\u7684\u6570\u7EC4\uFF0C\u65B0\u5207\u7247\u6307\u5411\u7684\u6570\u7EC4\u662F\u4E00\u4E2A\u5168\u65B0\u7684\u6570\u7EC4\u3002\u5E76\u4E14 cap \u5BB9\u91CF\u4E5F\u53D1\u751F\u4E86\u53D8\u5316\u3002\u8FD9\u4E4B\u95F4\u7A76\u7ADF\u53D1\u751F\u4E86\u4EC0\u4E48\u5462\uFF1F</p><p>Go \u4E2D\u5207\u7247\u6269\u5BB9\u7684\u7B56\u7565\u662F\u8FD9\u6837\u7684\uFF1A</p><p>\u5982\u679C\u5207\u7247\u7684\u5BB9\u91CF\u5C0F\u4E8E 1024 \u4E2A\u5143\u7D20\uFF0C\u4E8E\u662F\u6269\u5BB9\u7684\u65F6\u5019\u5C31\u7FFB\u500D\u589E\u52A0\u5BB9\u91CF\u3002\u4E0A\u9762\u90A3\u4E2A\u4F8B\u5B50\u4E5F\u9A8C\u8BC1\u4E86\u8FD9\u4E00\u60C5\u51B5\uFF0C\u603B\u5BB9\u91CF\u4ECE\u539F\u6765\u76844\u4E2A\u7FFB\u500D\u5230\u73B0\u5728\u76848\u4E2A\u3002</p><p>\u4E00\u65E6\u5143\u7D20\u4E2A\u6570\u8D85\u8FC7 1024 \u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u589E\u957F\u56E0\u5B50\u5C31\u53D8\u6210 1.25 \uFF0C\u5373\u6BCF\u6B21\u589E\u52A0\u539F\u6765\u5BB9\u91CF\u7684\u56DB\u5206\u4E4B\u4E00\u3002</p><p>\u6CE8\u610F\uFF1A\u6269\u5BB9\u6269\u5927\u7684\u5BB9\u91CF\u90FD\u662F\u9488\u5BF9\u539F\u6765\u7684\u5BB9\u91CF\u800C\u8A00\u7684\uFF0C\u800C\u4E0D\u662F\u9488\u5BF9\u539F\u6765\u6570\u7EC4\u7684\u957F\u5EA6\u800C\u8A00\u7684\u3002</p><h4 id="\u65B0\u6570\u7EC4-or-\u8001\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u65B0\u6570\u7EC4-or-\u8001\u6570\u7EC4" aria-hidden="true">#</a> \u65B0\u6570\u7EC4 or \u8001\u6570\u7EC4 \uFF1F</h4><p>\u518D\u8C08\u8C08\u6269\u5BB9\u4E4B\u540E\u7684\u6570\u7EC4\u4E00\u5B9A\u662F\u65B0\u7684\u4E48\uFF1F\u8FD9\u4E2A\u4E0D\u4E00\u5B9A\uFF0C\u5206\u4E24\u79CD\u60C5\u51B5\u3002</p><p>\u60C5\u51B5\u4E00\uFF1A</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
    slice <span class="token operator">:=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
    newSlice <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    newSlice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After array = %v\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6253\u5370\u8F93\u51FA\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    Before slice = [10 20], Pointer = 0xc4200c0040, len = 2, cap = 4
    Before newSlice = [10 20 50], Pointer = 0xc4200c0060, len = 3, cap = 4
    After slice = [10 30], Pointer = 0xc4200c0040, len = 2, cap = 4
    After newSlice = [10 30 50], Pointer = 0xc4200c0060, len = 3, cap = 4
    After array = [10 30 50 40]
</code></pre></div><p>\u628A\u4E0A\u8FF0\u8FC7\u7A0B\u7528\u56FE\u8868\u793A\u51FA\u6765\uFF0C\u5982\u4E0B\u56FE\u3002</p><p><img src="https://downloadflies.com/blog-img/image-20220916153219432.png" alt="image-20220916153219432"></p><p>\u901A\u8FC7\u6253\u5370\u7684\u7ED3\u679C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6269\u5BB9\u4EE5\u540E\u5E76\u6CA1\u6709\u65B0\u5EFA\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF0C\u6269\u5BB9\u524D\u540E\u7684\u6570\u7EC4\u90FD\u662F\u540C\u4E00\u4E2A\uFF0C\u8FD9\u4E5F\u5C31\u5BFC\u81F4\u4E86\u65B0\u7684\u5207\u7247\u4FEE\u6539\u4E86\u4E00\u4E2A\u503C\uFF0C\u4E5F\u5F71\u54CD\u5230\u4E86\u8001\u7684\u5207\u7247\u4E86\u3002\u5E76\u4E14 append() \u64CD\u4F5C\u4E5F\u6539\u53D8\u4E86\u539F\u6765\u6570\u7EC4\u91CC\u9762\u7684\u503C\u3002\u4E00\u4E2A append() \u64CD\u4F5C\u5F71\u54CD\u4E86\u8FD9\u4E48\u591A\u5730\u65B9\uFF0C\u5982\u679C\u539F\u6570\u7EC4\u4E0A\u6709\u591A\u4E2A\u5207\u7247\uFF0C\u90A3\u4E48\u8FD9\u4E9B\u5207\u7247\u90FD\u4F1A\u88AB\u5F71\u54CD\uFF01\u65E0\u610F\u95F4\u5C31\u4EA7\u751F\u4E86\u83AB\u540D\u7684 bug\uFF01</p><p>\u8FD9\u79CD\u60C5\u51B5\uFF0C\u7531\u4E8E\u539F\u6570\u7EC4\u8FD8\u6709\u5BB9\u91CF\u53EF\u4EE5\u6269\u5BB9\uFF0C\u6240\u4EE5\u6267\u884C append() \u64CD\u4F5C\u4EE5\u540E\uFF0C\u4F1A\u5728\u539F\u6570\u7EC4\u4E0A\u76F4\u63A5\u64CD\u4F5C\uFF0C\u6240\u4EE5\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6269\u5BB9\u4EE5\u540E\u7684\u6570\u7EC4\u8FD8\u662F\u6307\u5411\u539F\u6765\u7684\u6570\u7EC4\u3002</p><p>\u8FD9\u79CD\u60C5\u51B5\u4E5F\u6781\u5BB9\u6613\u51FA\u73B0\u5728\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\u65F6\u5019\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570 cap \u4F20\u503C\u7684\u65F6\u5019\uFF0C\u5982\u679C\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\uFF0Ccap \u5E76\u4E0D\u7B49\u4E8E\u6307\u5411\u6570\u7EC4\u7684\u603B\u5BB9\u91CF\uFF0C\u90A3\u4E48\u8FD9\u79CD\u60C5\u51B5\u5C31\u4F1A\u53D1\u751F\u3002</p><div class="language-text ext-text"><pre class="language-text"><code>    slice := array[1:2:3]
</code></pre></div><p>\u4E0A\u9762\u8FD9\u79CD\u60C5\u51B5\u975E\u5E38\u5371\u9669\uFF0C\u6781\u5EA6\u5BB9\u6613\u4EA7\u751F bug \u3002</p><p>\u5EFA\u8BAE\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\u7684\u65F6\u5019\uFF0Ccap \u7684\u503C\u4E00\u5B9A\u8981\u4FDD\u6301\u6E05\u9192\uFF0C\u907F\u514D\u5171\u4EAB\u539F\u6570\u7EC4\u5BFC\u81F4\u7684 bug\u3002</p><p>\u60C5\u51B5\u4E8C\uFF1A</p><p>\u60C5\u51B5\u4E8C\u5176\u5B9E\u5C31\u662F\u5728\u6269\u5BB9\u7B56\u7565\u91CC\u9762\u4E3E\u7684\u4F8B\u5B50\uFF0C\u5728\u90A3\u4E2A\u4F8B\u5B50\u4E2D\u4E4B\u6240\u4EE5\u751F\u6210\u4E86\u65B0\u7684\u5207\u7247\uFF0C\u662F\u56E0\u4E3A\u539F\u6765\u6570\u7EC4\u7684\u5BB9\u91CF\u5DF2\u7ECF\u8FBE\u5230\u4E86\u6700\u5927\u503C\uFF0C\u518D\u60F3\u6269\u5BB9\uFF0C Go \u9ED8\u8BA4\u4F1A\u5148\u5F00\u4E00\u7247\u5185\u5B58\u533A\u57DF\uFF0C\u628A\u539F\u6765\u7684\u503C\u62F7\u8D1D\u8FC7\u6765\uFF0C\u7136\u540E\u518D\u6267\u884C append() \u64CD\u4F5C\u3002\u8FD9\u79CD\u60C5\u51B5\u4E1D\u6BEB\u4E0D\u5F71\u54CD\u539F\u6570\u7EC4\u3002</p><p>\u6240\u4EE5\u5EFA\u8BAE\u5C3D\u91CF\u907F\u514D\u60C5\u51B5\u4E00\uFF0C\u5C3D\u91CF\u4F7F\u7528\u60C5\u51B5\u4E8C\uFF0C\u907F\u514D bug \u4EA7\u751F\u3002</p><h3 id="_1-1-5-\u5207\u7247\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_1-1-5-\u5207\u7247\u62F7\u8D1D" aria-hidden="true">#</a> 1.1.5. \u5207\u7247\u62F7\u8D1D</h3><p>Slice \u4E2D\u62F7\u8D1D\u65B9\u6CD5\u67092\u4E2A\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">slicecopy</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> fm slice<span class="token punctuation">,</span> width <span class="token builtin">uintptr</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6E90\u5207\u7247\u6216\u8005\u76EE\u6807\u5207\u7247\u6709\u4E00\u4E2A\u957F\u5EA6\u4E3A0\uFF0C\u90A3\u4E48\u5C31\u4E0D\u9700\u8981\u62F7\u8D1D\uFF0C\u76F4\u63A5 return </span>
    <span class="token keyword">if</span> fm<span class="token punctuation">.</span><span class="token builtin">len</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> to<span class="token punctuation">.</span><span class="token builtin">len</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// n \u8BB0\u5F55\u4E0B\u6E90\u5207\u7247\u6216\u8005\u76EE\u6807\u5207\u7247\u8F83\u77ED\u7684\u90A3\u4E00\u4E2A\u7684\u957F\u5EA6</span>
    n <span class="token operator">:=</span> fm<span class="token punctuation">.</span><span class="token builtin">len</span>
    <span class="token keyword">if</span> to<span class="token punctuation">.</span><span class="token builtin">len</span> <span class="token operator">&lt;</span> n <span class="token punctuation">{</span>
        n <span class="token operator">=</span> to<span class="token punctuation">.</span><span class="token builtin">len</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5165\u53C2 width = 0\uFF0C\u4E5F\u4E0D\u9700\u8981\u62F7\u8D1D\u4E86\uFF0C\u8FD4\u56DE\u8F83\u77ED\u7684\u5207\u7247\u7684\u957F\u5EA6</span>
    <span class="token keyword">if</span> width <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> n
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5F00\u542F\u4E86\u7ADE\u4E89\u68C0\u6D4B</span>
    <span class="token keyword">if</span> raceenabled <span class="token punctuation">{</span>
        callerpc <span class="token operator">:=</span> <span class="token function">getcallerpc</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span>
        pc <span class="token operator">:=</span> <span class="token function">funcPC</span><span class="token punctuation">(</span>slicecopy<span class="token punctuation">)</span>
        <span class="token function">racewriterangepc</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callerpc<span class="token punctuation">,</span> pc<span class="token punctuation">)</span>
        <span class="token function">racereadrangepc</span><span class="token punctuation">(</span>fm<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callerpc<span class="token punctuation">,</span> pc<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5F00\u542F\u4E86 The memory sanitizer (msan)</span>
    <span class="token keyword">if</span> msanenabled <span class="token punctuation">{</span>
        <span class="token function">msanwrite</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">msanread</span><span class="token punctuation">(</span>fm<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    size <span class="token operator">:=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">*</span> width
    <span class="token keyword">if</span> size <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> 
        <span class="token comment">// TODO: is this still worth it with new memmove impl?</span>
        <span class="token comment">// \u5982\u679C\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u6307\u9488\u76F4\u63A5\u8F6C\u6362\u5373\u53EF</span>
        <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>array<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>fm<span class="token punctuation">.</span>array<span class="token punctuation">)</span> <span class="token comment">// known to be a byte pointer</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u4E0D\u6B62\u4E00\u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u5C31\u628A size \u4E2A bytes \u4ECE fm.array \u5730\u5740\u5F00\u59CB\uFF0C\u62F7\u8D1D\u5230 to.array \u5730\u5740\u4E4B\u540E</span>
        <span class="token function">memmove</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>array<span class="token punctuation">,</span> fm<span class="token punctuation">.</span>array<span class="token punctuation">,</span> size<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> n
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u8FD9\u4E2A\u65B9\u6CD5\u4E2D\uFF0Cslicecopy \u65B9\u6CD5\u4F1A\u628A\u6E90\u5207\u7247\u503C(\u5373 fm Slice )\u4E2D\u7684\u5143\u7D20\u590D\u5236\u5230\u76EE\u6807\u5207\u7247(\u5373 to Slice )\u4E2D\uFF0C\u5E76\u8FD4\u56DE\u88AB\u590D\u5236\u7684\u5143\u7D20\u4E2A\u6570\uFF0Ccopy \u7684\u4E24\u4E2A\u7C7B\u578B\u5FC5\u987B\u4E00\u81F4\u3002slicecopy \u65B9\u6CD5\u6700\u7EC8\u7684\u590D\u5236\u7ED3\u679C\u53D6\u51B3\u4E8E\u8F83\u77ED\u7684\u90A3\u4E2A\u5207\u7247\uFF0C\u5F53\u8F83\u77ED\u7684\u5207\u7247\u590D\u5236\u5B8C\u6210\uFF0C\u6574\u4E2A\u590D\u5236\u8FC7\u7A0B\u5C31\u5168\u90E8\u5B8C\u6210\u4E86\u3002</p><p><img src="https://downloadflies.com/blog-img/image-20220916153244420.png" alt="image-20220916153244420"></p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
    slice <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
    n <span class="token operator">:=</span> <span class="token function">copy</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> array<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>slice<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD8\u6709\u4E00\u4E2A\u62F7\u8D1D\u7684\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u539F\u7406\u548C slicecopy \u65B9\u6CD5\u7C7B\u4F3C\uFF0C\u4E0D\u5728\u8D58\u8FF0\u4E86\uFF0C\u6CE8\u91CA\u5199\u5728\u4EE3\u7801\u91CC\u9762\u4E86\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">slicestringcopy</span><span class="token punctuation">(</span>to <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> fm <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6E90\u5207\u7247\u6216\u8005\u76EE\u6807\u5207\u7247\u6709\u4E00\u4E2A\u957F\u5EA6\u4E3A0\uFF0C\u90A3\u4E48\u5C31\u4E0D\u9700\u8981\u62F7\u8D1D\uFF0C\u76F4\u63A5 return </span>
    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>fm<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">len</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// n \u8BB0\u5F55\u4E0B\u6E90\u5207\u7247\u6216\u8005\u76EE\u6807\u5207\u7247\u8F83\u77ED\u7684\u90A3\u4E00\u4E2A\u7684\u957F\u5EA6</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>fm<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">&lt;</span> n <span class="token punctuation">{</span>
        n <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5F00\u542F\u4E86\u7ADE\u4E89\u68C0\u6D4B</span>
    <span class="token keyword">if</span> raceenabled <span class="token punctuation">{</span>
        callerpc <span class="token operator">:=</span> <span class="token function">getcallerpc</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span>
        pc <span class="token operator">:=</span> <span class="token function">funcPC</span><span class="token punctuation">(</span>slicestringcopy<span class="token punctuation">)</span>
        <span class="token function">racewriterangepc</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> callerpc<span class="token punctuation">,</span> pc<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5F00\u542F\u4E86 The memory sanitizer (msan)</span>
    <span class="token keyword">if</span> msanenabled <span class="token punctuation">{</span>
        <span class="token function">msanwrite</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u62F7\u8D1D\u5B57\u7B26\u4E32\u81F3\u5B57\u8282\u6570\u7EC4</span>
    <span class="token function">memmove</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">stringStructOf</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>fm<span class="token punctuation">)</span><span class="token punctuation">.</span>str<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> n
<span class="token punctuation">}</span>
</code></pre></div><p>\u518D\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    slice <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
    n <span class="token operator">:=</span> <span class="token function">copy</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token string">&quot;abcdef&quot;</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>slice<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8F93\u51FA\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    3 [97,98,99]
</code></pre></div><p>\u8BF4\u5230\u62F7\u8D1D\uFF0C\u5207\u7247\u4E2D\u6709\u4E00\u4E2A\u9700\u8981\u6CE8\u610F\u7684\u95EE\u9898\u3002</p><div class="language-go ext-go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    slice <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> index<span class="token punctuation">,</span> value <span class="token operator">:=</span> <span class="token keyword">range</span> slice <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;value = %d , value-addr = %x , slice-addr = %x\\n&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token operator">&amp;</span>value<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8F93\u51FA\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>    value = 10 , value-addr = c4200aedf8 , slice-addr = c4200b0320
    value = 20 , value-addr = c4200aedf8 , slice-addr = c4200b0328
    value = 30 , value-addr = c4200aedf8 , slice-addr = c4200b0330
    value = 40 , value-addr = c4200aedf8 , slice-addr = c4200b0338
</code></pre></div><p>\u4ECE\u4E0A\u9762\u7ED3\u679C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u5982\u679C\u7528 range \u7684\u65B9\u5F0F\u53BB\u904D\u5386\u4E00\u4E2A\u5207\u7247\uFF0C\u62FF\u5230\u7684 Value \u5176\u5B9E\u662F\u5207\u7247\u91CC\u9762\u7684\u503C\u62F7\u8D1D\u3002\u6240\u4EE5\u6BCF\u6B21\u6253\u5370 Value \u7684\u5730\u5740\u90FD\u4E0D\u53D8\u3002</p><p><img src="https://downloadflies.com/blog-img/image-20220916153305714.png" alt="image-20220916153305714"></p><p>\u7531\u4E8E Value \u662F\u503C\u62F7\u8D1D\u7684\uFF0C\u5E76\u975E\u5F15\u7528\u4F20\u9012\uFF0C\u6240\u4EE5\u76F4\u63A5\u6539 Value \u662F\u8FBE\u4E0D\u5230\u66F4\u6539\u539F\u5207\u7247\u503C\u7684\u76EE\u7684\u7684\uFF0C\u9700\u8981\u901A\u8FC7 &amp;slice[index] \u83B7\u53D6\u771F\u5B9E\u7684\u5730\u5740\u3002</p>`,123),c=[o];function e(u,l){return s(),a("div",null,c)}var k=n(t,[["render",e],["__file","2-\u5207\u7247\u7684\u5E95\u5C42\u5B9E\u73B0.html.vue"]]);export{k as default};
